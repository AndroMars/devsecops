name: DevSecOps Demo Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f demo-app/requirements.txt ]; then pip install -r demo-app/requirements.txt; fi
          pip install semgrep safety

      # SAST - Statische Code-Analyse mit Semgrep
      - name: Run Semgrep
        uses: semgrep/semgrep-action@v1
        with:
          config: p/python
          output: semgrep-results.sarif
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      # SCA - Software Composition Analysis mit Safety
      - name: Run Safety
        run: |
          safety check -r demo-app/requirements.txt --output json > safety-results.json || true
          cat safety-results.json

      # Secret-Scanning mit TruffleHog
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@v3.16.0
        with:
          path: ./demo-app
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      # Container-Scanning mit Trivy (falls ein Dockerfile vorhanden ist)
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './demo-app'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      # Ergebnisse hochladen
      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: semgrep-results.sarif
          category: semgrep

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trivy-results.sarif
          category: trivy 